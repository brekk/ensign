import { Left, Right } from "Either"
import { split } from "String"

import { report } from "Study"

import {
  ExpectedBoolean,
  ExpectedString,
  UnexpectedFlag,
  flagBoolean,
  flagString,
  printLegend,
  printMarkdownLegend,
  validate,
} from "@/Declared"
import { Flag, FlagToggle, parseFlags } from "@/Flags"



PROGRAM_FLAGS = [
  flagBoolean("aliases", ["a"], "aliases to use"),
  flagBoolean("git", ["g"], "should we process git commands?"),
  flagBoolean("log", ["l"], "should we log as we go?"),
  flagString("description", ["desc", "d"], "a description of the project"),
  flagString("ignore", ["i"], "where should we pull the ignore file from?"),
  flagString("name", ["n"], "what is the name of the project?"),
  flagString("repo", ["r"], "where is the project located?"),
  flagString("template", ["t"], "where does the project template live?"),
  flagString("special", [], "this flag is special"),
]

VALID_INPUTS = [
  "-n",
  "dynne",
  "-d",
  "works for doctor dischord",
  `--repo="brekk/dynne"`,
  "--no-log",
  "--git",
  "-i=curlies",
]

report(
  pipe(
    parseFlags,
    validate(PROGRAM_FLAGS),
  ),
  "validate",
  [
    #[
      VALID_INPUTS,
      Right([
        Flag("name", "dynne"),
        Flag("description", "works for doctor dischord"),
        Flag("repo", "\"brekk/dynne\""),
        FlagToggle("log", false),
        FlagToggle("git", true),
        Flag("ignore", "curlies"),
      ]),
    ],
    #[["--name"], Left([ExpectedString("name")])],
    #[["--git=yes"], Left([ExpectedBoolean("git")])],
    #[["--x=100", "--no-y"], Left([UnexpectedFlag("x"), UnexpectedFlag("y")])],
  ],
)

report(
  printLegend,
  "printLegend",
  [
    #[
      PROGRAM_FLAGS,
      `--aliases / -a
  boolean
  aliases to use

--git / -g
  boolean
  should we process git commands?

--log / -l
  boolean
  should we log as we go?

--description / --desc / -d
  string
  a description of the project

--ignore / -i
  string
  where should we pull the ignore file from?

--name / -n
  string
  what is the name of the project?

--repo / -r
  string
  where is the project located?

--template / -t
  string
  where does the project template live?

--special 
  string
  this flag is special`,
    ],
  ],
)


report(
  pipe(
    printMarkdownLegend,
    split("\n"),
  ),
  "printMarkdownLegend",
  [
    #[
      PROGRAM_FLAGS,
      [
        "`--aliases` / `-a`",
        "  *boolean*",
        "  aliases to use",
        "",
        "`--git` / `-g`",
        "  *boolean*",
        "  should we process git commands?",
        "",
        "`--log` / `-l`",
        "  *boolean*",
        "  should we log as we go?",
        "",
        "`--description` / `--desc / -d`",
        "  *string*",
        "  a description of the project",
        "",
        "`--ignore` / `-i`",
        "  *string*",
        "  where should we pull the ignore file from?",
        "",
        "`--name` / `-n`",
        "  *string*",
        "  what is the name of the project?",
        "",
        "`--repo` / `-r`",
        "  *string*",
        "  where is the project located?",
        "",
        "`--template` / `-t`",
        "  *string*",
        "  where does the project template live?",
        "",
        "`--special`",
        "  *string*",
        "  this flag is special",
      ],
    ],
  ],
)
